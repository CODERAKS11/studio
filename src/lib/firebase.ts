// This is an autogenerated file from Firebase Studio.

"use client";

import { initializeApp } from "firebase/app";
import { getMessaging, getToken, onMessage } from "firebase/messaging";

const firebaseConfig = {
    apiKey: "YOUR_API_KEY",
    authDomain: "YOUR_AUTH_DOMAIN",
    projectId: "YOUR_PROJECT_ID",
    storageBucket: "YOUR_STORAGE_BUCKET",
    messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
    appId: "YOUR_APP_ID",
    measurementId: "YOUR_MEASUREMENT_ID"
};

let app: any = null;
let messaging: any = null;

const initializeFirebaseApp = () => {
  if (typeof window !== 'undefined' && !app) {
    app = initializeApp(firebaseConfig);
    messaging = getMessaging(app);
  }
};

export const initializeFirebaseMessaging = () => {
    initializeFirebaseApp();
    
    if (messaging && typeof window !== 'undefined') {
        onMessage(messaging, (payload) => {
            console.log('Message received. ', payload);
            const notificationTitle = payload.notification?.title || "New Message";
            const notificationOptions = {
                body: payload.notification?.body || "",
                icon: payload.notification?.icon || "/icon.png",
            };

            const notification = new Notification(notificationTitle, notificationOptions);
            
            notification.onclick = (event) => {
                event.preventDefault(); 
                if (payload.data?.url) {
                    window.open(payload.data.url, '_blank');
                }
                notification.close();
            };
        });
    }
};

export const requestNotificationPermission = async () => {
  if (typeof window === 'undefined' || !('Notification' in window)) {
    return 'default';
  }
  
  const permission = Notification.permission;
  if (permission === 'granted') {
    await getAndLogToken();
    return 'granted';
  }

  if (permission === 'denied') {
    return 'denied';
  }
  
  const newPermission = await Notification.requestPermission();
  if (newPermission === 'granted') {
    await getAndLogToken();
  }
  
  return newPermission;
};

const getAndLogToken = async () => {
    initializeFirebaseApp();
    if (messaging && typeof window !== 'undefined') {
        try {
            const currentToken = await getToken(messaging, { vapidKey: "YOUR_VAPID_KEY" });
            if (currentToken) {
                console.log('FCM Token:', currentToken);
                // In a real app, you would send this token to your server.
            } else {
                console.log('No registration token available. Request permission to generate one.');
            }
        } catch (err) {
            console.log('An error occurred while retrieving token. ', err);
        }
    }
};
